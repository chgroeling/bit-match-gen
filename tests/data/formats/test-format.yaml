context:
  members: [context0, context1]

struct_def:
  StructA: {members: [ra0, ra1]}
  StructB: { }
  StructC: {members: [rc0, rc1]}
  StructD: {members: [rd0]}

operations:
  set_ra0_1 : {op: set, dest: ra0, args: [1]} # o=1
  set_ra1_2 : {op: set, dest: ra1, args: [2]} # o=2
  set_rc0_1 : {op: set, dest: rc0, args: [1]} # o=1
  set_rc1_2 : {op: set, dest: rc1, args: [2]} # o=2
  set_context_cafe: {op: set, dest: context.context1, args: ["0xCAFE"]} # o=2
  extract_rd: {op: extract_bits, dest: rd0, args: [5, 3]} # o=i[MSB:LSB]
  set_rcx  :  {op: combine, dest: tmp, args: ["set_rc0_1", "set_rc1_2"]}
  custom_code:
    dest: tmp
    op: insert_code
    args: [5, 3]
    Python:
      code: |
         hello = "world"
         hallo = "welt"
  
patterns:
  00xxx00x: {name: instr_A0, to: StructA, ops: [set_ra0_1, set_ra1_2]}
  00xxx01x: {name: instr_A1, to: StructA, ops: [set_ra0_1, set_ra1_2]}
  010xxxxx: {name: instr_B0, to: StructB, ops: [set_context_cafe]}
  011xxxxx: {name: instr_UNDEF0}
  10xxxxxx: {name: instr_UNDEF1}
  111xxxxx: {name: instr_C0, to: StructC, ops: [set_rc0_1, set_rc1_2]}
  110xxxxx: {name: instr_C1, to: StructC, ops: [set_rc0_1, set_rc1_2]}
  00xxx111: {name: instr_D0, to: StructD, ops: [extract_rd]}
